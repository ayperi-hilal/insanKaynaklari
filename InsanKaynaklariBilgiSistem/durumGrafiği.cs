using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.SqlClient;
using DevExpress.XtraCharts;
namespace InsanKaynaklariBilgiSistem
{
    public partial class durumGrafiği : Form
    {
        public durumGrafiği()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }
        sqlBaglantisi baglantim = new sqlBaglantisi();


        public void listele_gorevYeri()
        {
            SqlCommand sorgu2 = new SqlCommand("Gorev_Yeri", baglantim.baglanti());
            sorgu2.CommandType = CommandType.StoredProcedure;
            SqlDataAdapter da2 = new SqlDataAdapter(sorgu2);

            DataTable dt2 = new DataTable();
            da2.Fill(dt2);

            gridControl1.DataSource = dt2;

            gridView1.Columns["gorev_Yeri"].Caption = "GÖREV YERİ";
            gridView1.Columns["sayi"].Caption = "ADET";


        }




        public void listele_gorev_Yeri()
        {
            SqlCommand ss = new SqlCommand("gorev_gorev_yeri", baglantim.baglanti());
           ss.CommandType = CommandType.StoredProcedure;
            SqlDataAdapter dd = new SqlDataAdapter(ss);

            DataTable dtt = new DataTable();
            dd.Fill(dtt);

            gridControl2.DataSource = dtt;

            gridView2.Columns["gorev_Yeri"].Caption = "GÖREV YERİ";
            gridView2.Columns["gorevi"].Caption = "GÖREVİ";
            gridView2.Columns["sayi"].Caption = "ADET";


        }




        public void sayilar()
        {
            SqlCommand cinsiyet = new SqlCommand("sayilar", baglantim.baglanti());
            cinsiyet.CommandType = CommandType.StoredProcedure;

            SqlDataReader tr = cinsiyet.ExecuteReader();

            while (tr.Read())
            {
                //txt_kadin.Text = tr[0].ToString();

                if (tr[0].ToString() == "Bay")
                {
                    //txt_erkek.Text = tr[1].ToString();

                }
                else
                {
                    //   txt_kadin.Text = tr[1].ToString();

                }

                //txt_erkek.Text = tr[1].ToString();
            }
        }

        private void durumGrafiği_Load(object sender, EventArgs e)
        {

            SqlCommand cinsiyet = new SqlCommand("SELECT cinsiyet,COUNT(*) as 'sayi' FROM Kisi GROUP BY cinsiyet", baglantim.baglanti());
            SqlDataReader dr = cinsiyet.ExecuteReader();
            while (dr.Read())
            {
                if (dr[0].ToString() == "Bay")
                {
                    tablo_cinsiyet.Series["Erkek"].Points.AddPoint(Convert.ToString(dr[0]), int.Parse(dr[1].ToString()));
                }
                else
                {
                    tablo_cinsiyet.Series["Kadın"].Points.AddPoint(Convert.ToString(dr[0]), int.Parse(dr[1].ToString()));
                }
            }
            sayilar();

            //////////////////////////////////////////////////////////////////////////////////////////
            //////////////////////////////////////////////////////////////////////////////////////////
            SqlCommand gorev_Yeri = new SqlCommand("Gorev_Yeri", baglantim.baglanti());

            gorev_Yeri.CommandType = CommandType.StoredProcedure;

            SqlDataReader gy = gorev_Yeri.ExecuteReader();
            while (gy.Read())
            {
                tablo_gorevYeri.Series["yer"].Points.AddPoint(Convert.ToString(gy[0]), int.Parse(gy[1].ToString()));
            }

            listele_gorevYeri();

            ////////////////////////////////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////////////////////////////

            SqlCommand gorev = new SqlCommand("gorevi", baglantim.baglanti());

            gorev.CommandType = CommandType.StoredProcedure;

            SqlDataReader g = gorev.ExecuteReader();

            while (g.Read())
            {

                tablo_pasta.Series["pasta"].Points.AddPoint(Convert.ToString(g[0]), int.Parse(g[1].ToString()));

            }



            ///////////////////////////////////////////////////////////////////////////////////////////
            ///////////////////////////////////////////////////////////////////////////////////////////

            SqlCommand gorev_gorev = new SqlCommand("gorev_gorev_yeri", baglantim.baglanti());

            gorev_gorev.CommandType = CommandType.StoredProcedure;

            SqlDataReader hh = gorev_gorev.ExecuteReader();
           /* 
            while (hh.Read())
             {

                // tablo_gorev_gorev_yeri.Series["gorev_gorev"].Points.AddPoint(Convert.ToString(hh[0]), int.Parse(hh[2].ToString()));
                 // tablo_gorev_gorev_yeri.Series["dagılım"].Points.AddPoint(Convert.ToString(gg[0]), int.Parse(gg[1].ToString()));
                // tablo_gorev_gorev_yeri.Series["gorev_gorev"].Points.AddPoint(Convert.ToString(hh[0]), int.Parse(hh[2].ToString()));
               //  tablo_gorev_gorev_yeri.Series["gorev_gorev"].Points.AddPoint(Convert.ToString(hh[1]), int.Parse(hh[2].ToString()));
             }
           */
            
/*
            while (hh.Read())
            {
               //chartControl1.Series["Series 1"].Points.AddPoint(Convert.ToString(hh[0]),int.Parse(hh[2].ToString()));
               // chartControl1.Series["Series 2"].Points.AddPoint(Convert.ToString(hh[1]), int.Parse(hh[2].ToString()));

                /*chart1.Series["s2"].Points.AddXY(Convert.ToString(hh[1]), int.Parse(hh[2].ToString()));
            /*
                chartControl1.Series["s1"].Points.AddPoint("day 2", "25");
                chartControl1.Series["s2"].Points.AddPoint("day 2", "75");

                chartControl1.Series["s1"].Points.AddPoint("day 3", "40");
                chartControl1.Series["s2"].Points.AddPoint("day 3", "60");

                chartControl1.Series["s1"].Points.AddPoint("day 4", "70");
                chartControl1.Series["s2"].Points.AddPoint("day 4", "30");
               
            }
        */
          //  SwitchRowColumn();



            listele_gorev_Yeri();




        }
       /* public void SwitchRowColumn()
        {
            string seriesDataMember = chartControl1.SeriesDataMember;
            chartControl1.SeriesDataMember = chartControl1.SeriesTemplate.ArgumentDataMember;
            chartControl1.SeriesTemplate.ArgumentDataMember = seriesDataMember;

            string seriesDataMember2 = chartControl1.SeriesDataMember;
            chartControl1.SeriesDataMember = chartControl1.SeriesTemplate.ArgumentDataMember;
            chartControl1.SeriesTemplate.ArgumentDataMember = seriesDataMember2;
        }*/
    }
}
